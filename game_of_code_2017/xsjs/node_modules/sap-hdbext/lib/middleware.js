'use strict';

var _ = require('lodash');
var logger = require('./utils/logger').getLogger();
var poolModule = require('./pool');
var connOptions = require('./conn-options');

var pool;

exports.middleware = function middleware(hanaService, poolOptions) {
  if (!pool) {
    var hanaOptions = _.merge({}, connOptions.getGlobalOptions(), hanaService);
    pool = poolModule.getPool(hanaOptions, poolOptions);
  }
  return function db(req, res, next) {
    var opt = connOptions.getRequestOptions(req);
    pool.acquire(opt, function (err, client) {
      if (err) {
        err.status = 500;
        logger.error('SAP_HDBEXT MIDDLEWARE: error during pool.acquire(): ' + JSON.stringify(err));
        return next(err);
      }

      function removeDBConnectionFromRequest() {
        delete req.db;
      }

      client.once('release', removeDBConnectionFromRequest);

      function cleanup() {
        logger.debug('SAP_HDBEXT MIDDLEWARE: in cleanup');
        req.socket.removeListener('close', cleanup);
        if (req.db) {
          delete req.db;
          pool.release(client);
        }
      }

      res.once('finish', cleanup);
      req.socket.once('close', cleanup);

      req.db = client;
      next();
    });
  };
};
