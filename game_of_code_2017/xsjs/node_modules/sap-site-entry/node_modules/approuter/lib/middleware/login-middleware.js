'use strict';

var loginProvider = require('./login-provider');
var checkRequest = require('../utils/check-request');
var pathUtil = require('../utils/path-util');
var xhr = require('../xhr-login/xhr');

module.exports = function loginCheck(req, res, next) {
  if (!loginProvider.isLoginRequired(req)) {
    return next();
  }

  if (req.method !== 'GET' && pathUtil.pathAuthenticationType(req) === 'xsuaa') {
    return sendUnauthorizedRequest(res);
  }
  if (checkRequest.isAjaxRequest(req)) {
    return processAjaxCall(req, res);
  }

  try {
    var authenticator = loginProvider.getAuthenticator(req, res);
    authenticator(req, res, next);
  } catch (err) {
    if (err === 401) {
      res.setHeader('WWW-Authenticate', 'Basic realm="' + xhr.getRealm() + '"');
      sendUnauthorizedRequest(res);
    } else {
      var logger = req.loggingContext.getLogger('/Handler');
      logger.error(err);
      res.writeHead(500);
      res.end(err.message);
    }
  }
};

function processAjaxCall(req, res) {
  if (xhr.isXhrLoginRequest(req)) {
    xhr.sendLogonChallenge(res);
  } else {
    sendUnauthorizedRequest(res);
  }
}

function sendUnauthorizedRequest(res) {
  res.writeHead(401);
  res.end('Authentication required');
}
