'use strict';

const path = require('path'),
    restMapper = require('./services/restMapper'),
    xsAppJsonMerger = require('./services/xsAppJsonMerger'),
    express = require('express'),
    morgan = require('morgan'),
    approuter = require('approuter'),
    bodyParser = require('body-parser'),
    packageInfo = require('./package.json');


console.log(
    '\n========================================\n' +
    '               Starting FES' +
    '\n========================================\n'
);

var ar = approuter();

console.log('Registering performance middleware');

ar.first.use(bodyParser.json());

ar.first.use((req, res, next) => {
    let t = process.hrtime(),
        _send = res.send;
    res.send = (arg0, arg1, arg2) => {
        if (res.writable) {
            t = process.hrtime(t);
            res.setHeader('x-sap-performance', `${t[1] / 1000000000}`);
            _send.call(res, arg0, arg1, arg2);
        }
    };
    next();
});




console.log(
    '\n========================================\n' +
    '               Registering user & roles middleware' +
    '\n========================================\n'
);

ar.beforeRequestHandler.use((req, res, next) => {
    req.userId = req.userId || req.query['userId'] || 'Anonymous';
    next();
});


console.log(
    '\n========================================\n' +
    '               Registering static resources middleware' +
    '\n========================================\n'
);


ar.beforeRequestHandler.use(express.static('public'));
ar.beforeRequestHandler.use(morgan('combined'));

restMapper.registerRests(ar);

// Save env variable of build runtime date for caching
process.env.buildRuntimeDate = packageInfo.version;

ar.start({
    xsappConfig: xsAppJsonMerger.getXsAppConfig(process.cwd())
});
