// @copyright@
/**
 * @fileOverview The Unified Shell's bootstrap code for standalone demos.
 *
 * @version @version@
 */
(function () {
    "use strict";
    /*global jQuery, sap, window */

    window['sap-ui-config'] = {
        "xx-bootTask": function (fnCallback) {
            jQuery.sap.registerModulePath("sap.ushell.shells.demo", ".");
            jQuery.sap.registerModulePath("sap.ushell.adapters.cf", "/resources/sap/ushell/adapters/cf");
            jQuery.sap.registerModulePath("sap.ushell.personalization.cdm", "/resources/sap/ushell/personalization/cdm");

            // TODO: quick fix for search adapter test data
            jQuery.sap.registerModulePath("sap.ushell.adapters.local.searchResults", "./searchResults");

            new CacheBuster(window["sap-flp-build-timestamp"]);

            //Load configuration for fiori demo
            //jQuery.sap.require("sap.ushell.shells.demo.fioriDemoConfig");

            jQuery.sap.require("sap.ushell.services.Container");
            prepareSapUshellConfig();

            var getSitePromise = getCDMSite();
            getSitePromise.done(function(siteJson) {
                loadSiteTheme(siteJson);

                // CDM Runtime services
                jQuery.extend(true, window["sap-ushell-config"].services, {
                    "CommonDataModel": {
                        module: "sap.ushell.services.CommonDataModel",
                        adapter: {
                            module: "sap.ushell.adapters.cdm.CommonDataModelAdapter",
                            "config": {
                                "siteData": window.fesCDMSite
                            }
                        }
                    }
                });

                // tell SAPUI5 that this boot task is done once the container has loaded
                sap.ushell.bootstrap("local").done(fnCallback);
            }).fail(function(err) {
                // tell SAPUI5 that this boot task is done once the container has loaded
                sap.ushell.bootstrap("local").done(fnCallback);
            });
        }
    };

    function getCDMSite() {
        var promise = jQuery.Deferred();

        var getSiteUrl = "/portal/rest/v1/site";
        jQuery.ajax({
            method: "get",
            url: getSiteUrl,
            dataType: "json"
        }).done(function(oData) {
            var applications = oData.applications;
            for (var app in applications) {
                setDefaultAppSignature(applications[app]);
            }
            window.fesCDMSite = oData;
            promise.resolve(oData);
        }).fail(function(err){
            promise.reject(err);
        });
        return promise;
    }

    function setDefaultAppSignature(app) {
        if (app['sap.app'] && app['sap.app'].crossNavigation && app['sap.app'].crossNavigation.inbounds) {
            var inbounds = app['sap.app'].crossNavigation.inbounds;
            for (var inbound in inbounds) {
                if (inbounds.hasOwnProperty(inbound)) {
                    inbounds[inbound].signature = inbounds[inbound].signature || {};
                    // TODO: (remove once ui5 fixes to "allowed" as default)
                    inbounds[inbound].signature.additionalParameters = inbounds[inbound].signature.additionalParameters || "allowed";
                    // TODO: (remove once ui5 fixes this bug)
                    inbounds[inbound].additionalParameters = inbounds[inbound].signature.additionalParameters;
                }
            }
        }
    }

    function prepareSapUshellConfig() {
        jQuery.extend(true, window['sap-ushell-config'], {
            renderers: {
                fiori2: {
                    componentData: {
                        config: {
                            "enableTilesOpacity": false,
                            "enablePersonalization": false,
                            "enableUserThemes": false,
                            "enableSetTheme": false,
                            applications: {
                                "Shell-home": {
                                    enableTilesOpacity: false
                                }
                            }

                        }
                    }
                }
            }
        });

        //Load local.PersonalizationAdapter based on url parameter "local=true"
        var params = jQuery.sap.getUriParameters(location.search);
        if (params.get("local") === "true"){
            window["sap-ushell-config"].services.Personalization = {
                "adapter": {
                    "module": "sap.ushell.adapters.local.PersonalizationAdapter",
                    "config": {"storageType": "LOCAL_STORAGE"}
                }
            }
        }

        // CDM Runtime services
        jQuery.extend(true, window["sap-ushell-config"].services, {
            "CommonDataModel": {
                module: "sap.ushell.services.CommonDataModel",
                adapter: {
                    module: "sap.ushell.adapters.cdm.CommonDataModelAdapter",
                    "config": {
                        "siteData": window.fesCDMSite
                    }
                }
            }
        });
        jQuery.sap.require("sap.ushell.services.CommonDataModel");
    }

    function loadSiteTheme(siteJson) {
        siteJson = siteJson || window.fesCDMSite;
        if (siteJson && siteJson.site.payload.config.theme) {
            var themeName = siteJson.site.payload.config.theme.name;
            var themePath = siteJson.site.payload.config.theme.baseUrl;
            if (themeName && themePath) { //If no theme name in site json, ui5 default is applied (blue crystal)
                sap.ui.getCore().applyTheme(themeName, themePath);
            } else if (themeName && themeName.indexOf('sap') === 0) {
                sap.ui.getCore().applyTheme(themeName, '');
            }
        }
    }

    var CacheBuster = function CacheBuster(ts) {
        this.setTimestamp(ts || String(new Date().getTime()));
        // store the original function to intercept
        this._fnAjaxOrig = jQuery.ajax;
        this.init();
    };

    CacheBuster.prototype.setTimestamp = function setTimestamp(ts) {
        this.timestamp = ts;
    };

    CacheBuster.prototype.convertURL = function convertURL(sUrl) {
        //Avoid converting library.css if ie9
        if (sap.ui.Device.browser.msie && sap.ui.Device.browser.version <= 9 && sUrl.match("library.css$")) {
            return sUrl;
        }

        //Get file extension
        var flpApprouterResource = sUrl.indexOf('/resources/sap/ushell') === 0 || sUrl.indexOf('/resources/sap/demo') === 0;
        var extension = sUrl.split('.').pop().split(/\#|\?/)[0];
        if (/(xml|js|json|css)$/ig.test(extension) && sUrl.search("[?&]ts=") === -1 && flpApprouterResource) {
            //Add query param as '?' or '&'
            sUrl += (sUrl.split('?')[1] ? '&' : '?') + "ts=" + this.timestamp;
            return sUrl;
        }

        return sUrl;
    };

    CacheBuster.prototype.init = function init() {
        var cacheBuster = this;
        // enhance the original ajax function with appCacheBuster functionality
        jQuery.ajax = function (url) {
            if (url && url.url) {
                url.url = cacheBuster.convertURL(url.url);
            }
            return cacheBuster._fnAjaxOrig.apply(this, arguments);
        };

        // enhance the includeScript function
        jQuery.sap.includeScript = function () {
            var oArgs = Array.prototype.slice.apply(arguments);
            if (oArgs[0]) { // Url
                oArgs[0] = cacheBuster.convertURL(oArgs[0]);
            }
            return cacheBuster._fnIncludeScript.apply(this, oArgs);
        };
    };

}());