'use strict';
/**
 * RpcUtil
 */
var logger = require('./logger.js');

exports.checkInvalidSessionId = function( result )
{
	if( result.value["rpc-status"].value == "failure" &&
			result.value["rpc-failure-code"].value == 710001 ) 
	{
		return true;
	}
	
	return false;
};

exports.checkStatus = function( result )
{
	if(result.value["rpc-status"].value != "rpc-list" )
	{
		return this.checkElementStatus(result);
	}else
	{
	   var rpcList = result.value["rpc-list"].value;
	   for(var i = 0; i++; i < rpcList.length)
	   {
		  if(!this.checkElementStatus(rpcList[i]))
		  {
			  return false;
		  }
	   }
	   return true;
	}
};

exports.checkElementStatus = function( result )
{
	if( result.value["rpc-status"].value == "success" ) {
		return true;
	}

	if( result.value["rpc-status"].value == "failure" ) {
		logger.trace("Status returned from Streaming cluster :" + result.value["rpc-status"].value);
		logger.trace("Failure code returned from Streaming cluster :" + result.value["rpc-failure-code"].value);
		logger.error("Failure message returned from Streaming cluster :" + result.value["rpc-failure"].value);
		return false;
	}

	logger.error( "unknown error: " + JSON.stringify( result ) );
	return false;
};

exports.getFailureString = function( result)
{
	return result.value["rpc-failure"].value;
};

/*
 * Uses result from Project.get() to verify if given project exists and if it is stopped 
 */
exports.getApplicationStatus = function( result, workspaceName, projectName )
{
	var exists = false;
	var stopped = false;
	if( result.value["rpc-status"].value != "success" ) {
		return { exists:exists, stopped:stopped };
	}
	
	var appList = result.value["application-list"].value;
	if( !appList ) { return { exists:exists, stopped:stopped }; }
	
	for( var i = 0; i < appList.length; i++ ) {
		var app = appList[i];
		if( app &&
			app.value["application-name"].value == projectName &&
			app.value["workspace-name"].value == workspaceName ) {
			exists = true;
			stopped = (app.value["current-status"].value.toLowerCase() != "started-running");
			break;
		}
	}
	return { exists:exists, stopped:stopped };
};

/*
 * Uses result from Workspace.get() to verify if given workspace exists 
 */
exports.getWorkspaceStatus = function( result, workspaceName)
{
	var exists = false;
	if( result.value["rpc-status"].value != "success" ) {
		return { exists:exists};
	}
	
	var workspaceList = result.value["workspace-list"].value;
	if( !workspaceList ) { return { exists:exists}; }
	
	for( var i = 0; i < workspaceList.length; i++ ) {
		var wName = workspaceList[i];
		if(wName && wName.value === workspaceName) {
			exists = true;
			break;
		}
	}
	return { exists:exists};
};
